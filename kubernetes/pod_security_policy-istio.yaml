# Taken from https://github.com/istio/istio/issues/6806#issuecomment-406230278

# Istio containers need to run as root with a pretty loose policy.
# See: https://github.com/istio/istio/issues/6806

apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: pod-security-policy-istio
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  privileged: false
  allowedCapabilities:
  - '*'
  volumes:
  - '*'
  # Required to prevent escalations to root.
  allowPrivilegeEscalation: true
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: false
---
# ClusterRole for reading the policy.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-security-policy-clusterrole-istio
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs:     ['use']
  resourceNames:
  - pod-security-policy-istio
---
# Binding for reading the policy via the role.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-security-policy-rolebinding-istio
  namespace: istio-system
roleRef:
  kind: ClusterRole
  name: pod-security-policy-clusterrole-istio
  apiGroup: rbac.authorization.k8s.io
subjects:
# Authorize all service accounts in the Istio namespace.
- kind: Group
  apiGroup: rbac.authorization.k8s.io
  name: system:serviceaccounts
- kind: Group
  apiGroup: rbac.authorization.k8s.io
  name: system:authenticated
